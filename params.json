{"name":"Muttqt","tagline":"mutt query tool","body":"# muttqt #\r\n\r\n`muttqt` is a command line program to facilitate querying various email address\r\nstorage solutions from mutt.\r\n\r\n## Overview ##\r\n\r\n`muttqt` is designed to be called by the [mutt][] [query_command][qc] to provide\r\na single entry for multiple email address storage locations.  \r\n\r\n`muttqt` currently interfaces with mutt aliases files, a database of email\r\naddresses that you have sent emails too, as well as functionality to communicate\r\nwith other external tools, such as:\r\n\r\n- [contacts][] - a small tool that talks to the Mac OS X Address Book\r\n- [goobook][] - a Python program that accesses your Google contacts\r\n- [mu][] - mu's cfind command, part of the maildir indexing tool\r\n\r\n`muttqt` requires `python` and `sqlite3`.  It has been tested with `python` 2.7,\r\nbut should work with earlier versions.\r\n\r\n## Advantages over lbdb ##\r\n\r\n- Actively supported.\r\n- Easy to extend.  As long as the external tools provide their output in the\r\n  proper format, no code changes to `muttqt` need to be made.\r\n- Stores email addresses you have sent messages to in either SQL or a flat text\r\n  file (lbdb-compatible).\r\n- UTF-8 support.  \r\n\r\n## Installing ##\r\n\r\nOne can copy the `muttqt` python file to your path to install.  Alternately, it\r\ncan be installed by running\r\n\r\n    make\r\n    make install\r\n\r\nIf you would like to install it in a location other than */usr/local*, use the\r\nprefix setting when running `make install` like so:\r\n\r\n    make prefix=/path/to/install install\r\n\r\nOn OS X, you will probably also want to install the `contacts` program.  It can\r\nbe installed easily by using [homebrew][]:\r\n\r\n    brew install https://raw.github.com/tgray/homebrew-tgbrew/master/contacts.rb\r\n\r\n## Configuring ##\r\n\r\nmuttqt's configuration and data files are stored in the `~/.muttqt` directory.\r\nThe configuration is called `muttqt.conf`.  To generate a default configuration\r\nfile, run `muttqt --write-config`.\r\n\r\nmuttqt is setup to utilise an Sqlite3 database for it's sent email address\r\nstorage.  This can be changed to a flat text file that is lbdb compatible by\r\nchanging the 'format' parameter in the 'sent' section to 'text'.\r\n\r\n## Example Usage ##\r\n\r\nThis returns all matches for *somename* from all of your configured data sources:\r\n\r\n    muttqt -q somename\r\n\r\nThe following usage will store any email address in the To, CC, or BCC headers\r\nand store them in the sent address data file.\r\n\r\n    cat email.txt | muttqt -f\r\n\r\nTo automate this harvesting of emails, see the section \"Setting up sent email\r\nintegration\".\r\n\r\n## Setting up mutt ##\r\n\r\n### Querying ###\r\n\r\nTo configure mutt to use muttqt, set the following in your muttrc file:\r\n\r\n    set query_command=\"/usr/local/bin/muttqt -q '%s'\"\r\n\r\n### Setting up sent email integration ###\r\n\r\nThe `muttqt -f` command provides a method of searching the To, CC, or BCC\r\nheaders of input data.  An easy way to automate address capture is to set the\r\nmutt [sendmail][] command to a wrapper script.  Either use the `tee` command to\r\nsplit the input message to both muttqt and your sendmail program, or copy the\r\ninput mail to a temporary file.  Here is a short example of the tee method: \r\n\r\n    #!/bin/bash\r\n    tee >(muttqt -f) | sendmail $*\r\n\r\nHere is an example of the temp file method, useful if you want to do other things\r\nwith your email message before sending:\r\n\r\n    #!/bin/sh -\r\n    muttqt='/usr/local/bin/muttqt -f'\r\n\r\n    sendmailbin='sendmail'\r\n\r\n    # save msg in file to re-use it for multiple tests\r\n    t=`mktemp -t mutt.XXXXXX` || exit 2\r\n    cat > $t\r\n\r\n    # q all messages first\r\n    cat $t | ($muttqt)\r\n    cat $t | ${sendmailbin}\r\n    rm -f $t\r\n\r\nThe above script works on OS X.  One might need to change the `mktemp` command\r\nto work on other OSes.  These scripts can be found in the *scripts* directory of\r\nthe source distribution, or in the */usr/local/share/muttqt* directory.\r\n\r\n## Other commands ##\r\n\r\n### Importing your lbdb sent addresses ###\r\n\r\nRun the following (pointing the command at the appropriate file):\r\n\r\n    muttqt -i ~/.lbdb/m_inmail.list\r\n\r\n### Exporting the sent SQL database ###\r\n\r\nRunning the following will produce an `lbdb` compatible file:  \r\n\r\n    muttqt -d output.txt\r\n\r\nThis file can be edited and reimported to `muttqt` in the same manner as an\r\n`lbdb` sent address file.\r\n\r\n### Editing and pruning the databse ###\r\n\r\nRunning `muttqt --print-sent` will display every address in the sent mail\r\ndatabase, prefixed by the SQL row id.  If you would like to remove a specific\r\nset of addresses, run `muttqt --remove-sent row_id`, where *row_id* are the row\r\nids of the addresses you would like to remove, separated by commas.\r\n\r\nIf you would like to remove all addresses last used before a certain date, run:\r\n\r\n    muttqt --date-prune date\r\n\r\nwhere *date* is in a YYYY-MM-DD format.\r\n\r\n## Motivation ##\r\n\r\nI've used [lbdb][] for years, but began to have problems compiling the Mac OS X\r\nAddress Book tool since it [lbdb][] is basically abandoned.  I went so far as to\r\nactually pick it up, hack on it a bit, and put [my version][tglbdb] on github.\r\nThis is the version that can be found on the [homebrew][] packaging system for\r\nMac OS X.\r\n\r\nSo, I decided I could probably write a stripped down, easy-to-maintain version\r\nin Python.  All I needed to do was write a small Objective C tool to interface\r\nwith the Mac OS X Address Book ([done][contacts]) and then hack a bit at the\r\nPython code.\r\n\r\n\r\n[mutt]: http://www.mutt.org\r\n[qc]: http://dev.mutt.org/doc/manual.html#query\r\n[lbdb]: http://www.spinnaker.de/lbdb/\r\n[tglbdb]: https://github.com/tgray/lbdb\r\n[homebrew]: https://github.com/mxcl/homebrew\r\n[contacts]: https://github.com/tgray/contacts\r\n[goobook]: https://pypi.python.org/pypi/goobook/\r\n[mu]: http://www.djcbsoftware.nl/code/mu/\r\n[sendmail]: http://www.mutt.org/doc/devel/manual.html#sendmail\r\n\r\n## Developer Info ##\r\n\r\nmuttqt is written by [Tim Gray][tggit].  It's obviously inspired by [lbdb][].\r\n\r\nThe muttqt homepage can be located on github at <https://github.com/tgray/muttqt>.\r\n\r\n[tggit]: https://github.com/tgray\r\n\r\n## License ##\r\n\r\n`muttqt` is released under an Apache License 2.0.  Please see the\r\n`LICENSE.markdown` file included with the distribution.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}